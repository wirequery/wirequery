ingress:
  enabled: false
  className: ""
  annotations: {}
  tls: []

grpcIngress:
  enabled: false
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/server-snippet: |
      grpc_read_timeout "86400s";
      grpc_send_timeout "86400s";
      client_body_timeout "86400s";
  hosts:
    - host: chart-example.local
  tls: []

wirequery-backend:
  settings:
    dbMigrateUser: postgres
    dbMigratePassword: postgres-root-password
    dbMigrateJdbcUrl: "jdbc:postgresql://wirequery-postgresql:5432/wirequery"
    redisHostName: wirequery-redis-master
    redisPort: "6379"
    dbUser: wirequery-multitenant
    dbPassword: wirequery-multitenant
    dbUrl: "jdbc:postgresql://wirequery-postgresql:5432/wirequery"
    adminEnabled: "true"

  replicaCount: 1
  image:
    repository: ghcr.io
    pullPolicy: IfNotPresent
    tag: wirequery/wirequery-backend:latest

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: true
    annotations: {}
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  service:
    type: ClusterIP
    port: 8080

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  env: []

  health:
    livenessPath: /
    readinessPath: /

wirequery-frontend:
  replicaCount: 1
  image:
    repository: ghcr.io
    pullPolicy: IfNotPresent
    tag: wirequery/wirequery-frontend:latest

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: true
    annotations: {}
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  service:
    type: ClusterIP
    port: 3000

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  env: []

  health:
    livenessPath: /
    readinessPath: /

global:
  wirequery-backend:
    enabled: true
  wirequery-frontend:
    enabled: true
  hosts:
    - host: chart-example.local
